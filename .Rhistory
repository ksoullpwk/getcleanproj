url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
url
download.file(url=url,destfile="rclean.csv",method="curl")
download.file(url=url,destfile="rclean.csv",method="curl")
download.file(url=url,destfile="rclean.csv",method="wget")
housing = read.csv(file="./rclean.csv")
housing
housing[housing[VAL]==24]
housing[housing["VAL"]==24]
housing[housing["VAL"]==24,"VAL"]
housing[housing["VAL"]==24,"VAL",na.rm=TRUE]
housing[housing["VAL"]==24,"VAL"]
.housing[housing["VAL"]==24,"VAL"]
housing["VAL"]==24
housing["VAL"]==24 & !is.na(housing["VAL"])
housing["VAL"]==24
housing["VAL"]==24 & !is.na(housing["VAL"])
housing[housing["VAL"]==24 & !is.na(housing["VAL"]),"VAL"]
length(housing["VAL"]==24 & !is.na(housing["VAL"]))
length(housing[housing["VAL"]==24 & !is.na(housing["VAL"]),"VAL"])
housing["FES"]
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile="rclean2.xlsx")
url
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(url=url,destfile="rclean2.xlsx")
download.file(url=url,destfile="rclean2.xlsx",method="wget")
colIndex <- 7:15
rowIndex <- 18-23
rowIndex <- 18:23
dat <- read.xlsx("./rclean2.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
library(XLConnect)
require(xlsx)
dat <- read.xlsx("./rclean2.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
dat <- read.table("./rclean2.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
dat <- read.table("./rclean2.xlsx",colIndex=colIndex,rowIndex=rowIndex)
require(xlsx)
install.packages(xlsx)
install.packages("xlsx)
install.packages("xlsx")
install.packages("xlsx")
sudo install.packages("xlsx")
sudo install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
require(xlsx)
url <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
require(xml)
require(xml)
require(xml)
require(xlsx)
require(XML)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(url,useInternal=TRUE)
doc <- xmlTreeParse(url,useInternal=TRUE)
doc <- xmlTreeParse(url,useInternal=TRUE)
doc <- xmlTreeParse(url)
doc <- xmlTreeParse(url)
url <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(url,useInternal=TRUE)
doc
rootNode <- xmlRoot(doc)
xmlName(rootNode)
doc
xmlName(rootNode)
xmlName(rootNode)$row
xpathSApply(rootNode,"//zipcode",xmlValue)
xpathSApply(rootNode,"//zipcode='21231'",xmlValue)
xpathSApply(rootNode,"//zipcode=='21231'",xmlValue)
xpathSApply(rootNode,"zipcode=='21231'",xmlValue)
xpathSApply(rootNode,"zipcode='21231'",xmlValue)
xpathSApply(rootNode,"zipcode",xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
xpathSApply(rootNode,"//zipcode='21231",xmlValue)
xpathSApply(rootNode,"//zipcode='21231'",xmlValue)
xpathSApply(rootNode,"//zipcode,xmlValue)
c
]
)
")"
""
"
)
""
"
xpathSApply(rootNode,"//zipcode",xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)=="21231"
xpathSApply(rootNode,"//zipcode",xmlValue)[xpathSApply(rootNode,"//zipcode",xmlValue)=="21231"]
length(xpathSApply(rootNode,"//zipcode",xmlValue)[xpathSApply(rootNode,"//zipcode",xmlValue)=="21231"])
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",destfile="./rclean3.csv",method="wget")
fread
require(fread)
require("fread")
require(data.table)
library(data.table)
library(data.table)
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",destfile="./rclean3.csv",method="wget")
fread("./rclean3.csv")
DT <- fread("./rclean3.csv")
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time((rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time((rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]))
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time(DT[,mean(pwgtp15),by=SEX])
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?nlme
?weight
wright
weight
Diet
x <- 1:4
lapply(x,runif)
sapply(x,runif)
library(datasets)
data(iris)
?iris
iris
lappy(split(iris,iris$Species),mean)
lapply(split(iris,iris$Species),mean)
split(iris,iris$Species)
split(iris,iris$Species)$virginica
mean(split(iris,iris$Species)$virginica$Sepal.Length)
apply(iris,2,mean)
apply(iris[, 1:4],2,mean)
apply(iris[, 1:4],1,mean)
data(mtcars)
mtcars
sapply(mtcars,cyl,mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)[1]
sapply(split(mtcars$mpg, mtcars$cyl), mean)[1]-sapply(split(mtcars$mpg, mtcars$cyl), mean)[3]
sapply(split(mtcars$hp, mtcars$cyl), mean)[1]-sapply(split(mtcars$hp, mtcars$cyl), mean)[3]
?mean
source("ProgrammingAssignment2/cachematrix.R")
x <- matrix(1:16,4,4)
x
makeCacheMatrix(x)
cachemean(x)
cacheSolve(x)
x<-makeCacheMatrix()
x$set(matrix(1:16,4,4))
cacheSolve(x)
x$get
x$get()
x$setinv()
x$setinv(solve)
x$getinv
x$getinv()
inv
?inv
x$getinv()
cacheSolve(x)
y <- makeCacheMatrix(matrix(1:16,4,4))
y
cacheSolve(y)
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
cacheSolve(amatrix)
cacheSolve(amatrix)
source("ProgrammingAssignment2/cachematrix.R")
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
amatrix$getinv()
cacheSolve(amatrix)
x <- 2000
m <- makeCacheMatrix(matrix(runif(x^2),x))
m
cacheSolve(m)
m$getinv()
cacheSolve(m)
x <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","qget3.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","qget3.csv",method="wget")
data <- read.csv("qget3.csv")
data
which(data$ACR==3)
which(data$ACR==3 & data$AGS==6)
read.jpeg
?read.jpeg
library("jpeg")
jpeg
?jpeg
library("jpeg")
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","qget3.jpeg",method="wget")
readJPEG(source="qget3.jpeg",native=TRUE)
pic <- readJPEG(source="qget3.jpeg",native=TRUE)
?quantile
quantile(pic,probs=c(0.3,0.8))
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","qgetgdp3.csv",method="wget")
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","qgetcty3.csv",method="wget")
gdp <- read.csv(file="qgetgdp3.csv")
cty <- read.csv(file="qgetcty3.csv")
gdp
gdp
head(gdp)
gdp <- read.csv(file="qgetgdp3.csv",header=TRUE)
head(gdp)
intersect(x=cty,y=gdp)
intersect(x=cty$CountryCode,y=gdp$Gross.domestic.product.2012)
gdp$Gross.domestic.product.2012
head(gdp)
intersect(x=cty$CountryCode,y=gdp$X)
factor(intersect(x=cty$CountryCode,y=gdp$X))
gdp <- read.csv(file="qgetgdp3new.csv")
head(gdp)
intersect(x=cty$CountryCode,y=gdp$X)
factor(intersect(x=cty$CountryCode,y=gdp$X))
setwd("getcleanproj/")
ls
dir()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip","Dataset.zip",method="wget")
features <- read.table("./Dataset/features.txt")
features
head(features)
features[[2]]
grep("mean",features[[2]])
grep("mean",features[[2]]) | grep("std",features[[2]])
cbind(grep("mean",features[[2]]),grep("std",features[[2]]))
cbind(grep("mean",features[[2]]),grep("std",features[[2]]))
rbind(grep("mean",features[[2]]),grep("std",features[[2]]))
cbind(grep("mean",features[[2]]),grep("std",features[[2]]))
c(grep("mean",features[[2]]),grep("std",features[[2]]))
grepl("mean",features[[2]])
grepl("mean",features[[2]]) | grepl("std",features[[2]])
sum(grepl("mean",features[[2]]) | grepl("std",features[[2]]))
sum(grepl("mean\(\)",features[[2]]) | grepl("std",features[[2]]))
sum(grepl("mean\\(\\)",features[[2]]) | grepl("std",features[[2]]))
sum(grepl("mean\\(\\)",features[[2]]) | grepl("std\\(\\",features[[2]]))
sum(grepl("mean\\(\\)",features[[2]]) | grepl("std\\(\\)",features[[2]]))
source("run_analysis.R")
data
head(data)
features[[2]]
features[,2]
features[[2]]
grep("mean\\(\\)|std\\(\\)", features[, 2])
data <- rbind(read.table("./Dataset/train/X_train.txt"), read.table("./Dataset/test/X_test.txt"))
data <- data[,grep("mean\\(\\)|std\\(\\)", features[, 2])]
head(data)
name(data)
names(data)
source("run_analysis.R")
features[,grepl("mean\\(\\)",features[[2]]) | grepl("std\\(\\)",features[[2]])]
features[grepl("mean\\(\\)",features[[2]]) | grepl("std\\(\\)",features[[2]])]
features[grepl("mean\\(\\)",features[[2]]) | grepl("std\\(\\)",features[[2]]),]
source("run_analysis.R")
head(data)
names(data) <- a
names(data) <- "a"
head(data)
features[grepl("mean\\(\\)",features[[2]]) | grepl("std\\(\\)",features[[2]]),]
names(data) <- [features[grepl("mean\\(\\)",features[[2]]) | grepl("std\\(\\)",features[[2]]),]][2]
names(data) <- features[grepl("mean\\(\\)",features[[2]]) | grepl("std\\(\\)",features[[2]]),][[2]]
head(data)
names(data) <- gsub("-",".",names(data))
head(data)
names(data) <- gsub(".","",names(data))
names(data) <- gsub("mean","Mean",names(data))
names(data) <- gsub("std","Std",names(data))
names(data) <- gsub("\\(\\)","",names(data))
head(data)
source("run_analysis.R")
head(data)
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
activity <- read.table("./Dataset/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
activity
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
activity
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activity
activity <- read.table("./Dataset/activity_labels.txt")
activity[[2]] <- tolower(gsub("_", "", activity[[2]]))
activity
head(label)
label[[1]]
label
activity[label,2]
activity[label[[1]],2]
label[[1]] <- activity[label[[1]],2]
label
names(label) <- "activity"
source("run_analysis.R")
split(data,data$activity)
sapply(split(data,data$activity),colMeans)
sapply(split(data,data$activity),function(x) colMeans(x))
sapply(split(data,data$activity),function(x) colMeans(x[,x!=1]))
split(data,data$activity)
head(split(data,data$activity))
sapply(split(data,data$activity),mean)
sapply(split(data,data$activity),function(x) colMeans(x[,data$subject]))
sapply(split(data,data$activity),function(x) colMeans(x[,data$activity]))
sapply(split(data,data$subject),mean)
sapply(split(split(data,data$subject),data$activity,mean)
)
sapply(split(split(data,data$subject),data$activity,mean))
sapply(split(split(data,data$subject),data$activity),mean)
split(split(data,data$subject),data$activity)
length(activity)
length(activity)[2]
length(activity[[2]])
data[,data$subject==1 & data$activity==activity[1,2]]
data[,data$subject==1 & data$activity==activity(1,2))
activity(1,2)
activity[1]
activity[1,2]
data[,data$subject==1 & data$activity==activity[1,2]]
data$subject==1
data$activity==activity[1,2]
data[data$subject==1 & data$activity==activity[1,2],]
colMean(data[data$subject==1 & data$activity==activity[1,2],])
colMeans(data[data$subject==1 & data$activity==activity[1,2],])
colMeans(data[data$subject==1 & data$activity==activity[1,2],],dims=1:66)
colMeans(data[data$subject==1 & data$activity==activity[1,2],],dims=3:68)
colMeans(data[data$subject==1 & data$activity==activity[1,2],],dims=66)
colMeans(data[data$subject==1 & data$activity==activity[1,2],],dims=1)
colMeans(data[data$subject==1 & data$activity==activity[1,2],],dims=3)
colMeans(data[data$subject==1 & data$activity==activity[1,2],])
data[data$subject==1 & data$activity==activity[1,2],]
colMeans(data[data$subject==1 & data$activity==activity[1,2],],dims=2)
colMeans(data[data$subject==1 & data$activity==activity[1,2],])
colMeans(data[data$subject==1 & data$activity==activity[1,2],][[1]])
colMeans(data[data$subject==1 & data$activity==activity[1,2],][1,2])
colMeans(data[data$subject==1 & data$activity==activity[1,2],])
data[data$subject==1 & data$activity==activity[1,2],]
means(data[data$subject==1 & data$activity==activity[1,2],][[1]])
mean(data[data$subject==1 & data$activity==activity[1,2],][[1]])
mean(data[data$subject==1 & data$activity==activity[1,2],][[2]])
mean(data[data$subject==1 & data$activity==activity[1,2],1])
colMeans(data[data$subject==1 & data$activity==activity[1,2],1:66])
library(datasets)
s <- split(airquality, airquality$Month)
sapply(s, function(x) colMeans(x[, c("Ozone","Solar.R","Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone","Solar.R","Wind")]))[[1]]
sapply(s, function(x) colMeans(x[, c("Ozone","Solar.R","Wind")]))[[2]]
sapply(s, function(x) colMeans(x[, c("Ozone","Solar.R","Wind")]))[[3]]
sapply(s, function(x) colMeans(x[, c("Ozone","Solar.R","Wind")]))[[4]]
sapply(s, function(x) colMeans(x[, c("Ozone","Solar.R","Wind")]))[[5]]
class(sapply(s, function(x) colMeans(x[, c("Ozone","Solar.R","Wind")])))
paste(1,activity[1,2],sep=".")
source("run_analysis.R")
colMeans(data[data$subject==i & data$activity==activity[j,2],1:columnsize])
colMeans(data[data$subject==1 & data$activity==activity[1,2],1:columnsize])
colMeans(data[data$subject==1 & data$activity==activity[1,2],1:66])
length(X[[2]])
length(X[[1]])
length(X[1])
length(X[1,])
source("run_analysis.R")
colMeans(data[data$subject==1 & data$activity==activity[1,2],1:66])
colMeans(data[data$subject==1 & data$activity==activity[1,2],1:columnsize])
dims(colMeans(data[data$subject==1 & data$activity==activity[1,2],1:columnsize]))
dim(colMeans(data[data$subject==1 & data$activity==activity[1,2],1:columnsize]))
length(colMeans(data[data$subject==1 & data$activity==activity[1,2],1:columnsize]))
length(row)
length(allMean)
length(allMean[1,])
length(allMean[1,2:colunmsize+1])
length(allMean[1,2:columnsize+1])
length(allMean[1,2:(columnsize+1)])
source("run_analysis.R")
source("run_analysis.R")
head(allMean)
names(allMean) <- "a"
head(allMean)
dimnames(allMean) <- c("sub.act",features[grepl("mean\\(\\)",features[[2]]) | grepl("std\\(\\)",features[[2]]),][[2]])
colnames(allMean) <- c("sub.act",features[grepl("mean\\(\\)",features[[2]]) | grepl("std\\(\\)",features[[2]]),][[2]])
head(allMean)
features[grepl("mean\\(\\)",features[[2]]) | grepl("std\\(\\)",features[[2]]),2]
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
colnames(allMean) <- features[grepl("mean\\(\\)",features[[2]]) | grepl("std\\(\\)",features[[2]]),2]
features[grepl("mean\\(\\)",features[[2]]) | grepl("std\\(\\)",features[[2]]),2]
length(features[grepl("mean\\(\\)",features[[2]]) | grepl("std\\(\\)",features[[2]]),2])
length(allMean[[2]])
length(allMean[1,])
source("run_analysis.R")
